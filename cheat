#!/usr/bin/env python

import os
import pkg_resources
import sys

# assembles a list of directories containing cheatsheets
def cheat_directories():
    paths = [os.path.expanduser('~/.cheat')]
    try:
      paths.append(pkg_resources.resource_filename('cheatlib', 'cheatsheets'))
    except ImportError:
      pass # cheatlib was not installed
    paths.extend(os.environ.get('CHEATPATH', '').split(os.pathsep))
    return [path for path in paths if os.path.isdir(path)]

# assembles a dictionary of cheatsheets found in the above directories
def cheat_files(cheat_directories):
    cheats = {}
    for cheat_dir in reversed(cheat_directories):
        cheats.update(dict([ (cheat, cheat_dir)\
                for cheat in os.listdir(cheat_dir) if '.' not in cheat ]))
    return cheats

def main():
    """MAIN"""

    # assemble a keyphrase out of all params passed to the script
    keyphrase  = ' '.join(sys.argv[1:])
    cheat_dirs = cheat_directories()

    # verify that we have at least one cheat directory
    if not cheat_dirs:
        print >> sys.stderr, \
        'The ~/.cheat dir does not exist or the CHEATPATH var is not set.'
        exit()

    # list the files in the ~/.cheat directory
    cheatsheets = cheat_files(cheat_dirs)

    # print help if requested
    if keyphrase.lower() in ['', 'cheat', 'help', '-h', '-help', '--help']:
        print "Usage: cheat [keyphrase]\n"
        print "Available keyphrases:"
        max_command = max([ len(x) for x in cheatsheets.keys() ]) + 3
        print '\n'.join(sorted([ '%s [%s]' % (key.ljust(max_command), value)\
                for key, value in cheatsheets.items() ]))
        exit()

    # print the cheatsheet if it exists
    if keyphrase in cheatsheets:
        with open (os.path.join(cheatsheets[keyphrase], keyphrase), 'r')\
                as cheatsheet:
            print cheatsheet.read()

    # if it does not, say so
    else:
        print 'No cheatsheet found for %s.' % keyphrase

if __name__ == '__main__':
    main()
