#!/usr/bin/env python
import os
import sys

DEFAULT_CHEAT_DIR = os.path.join(os.path.expanduser('~'), '.cheat')
USE_PYGMENTS      = False

# NOTE remove this check if it is confirmed to work on windows
if os.name == 'posix' and 'CHEATCOLORS' in os.environ:
    try:
        from pygments import highlight
        from pygments.util import ClassNotFound
        from pygments.lexers import get_lexer_for_filename, TextLexer
        from pygments.formatters import TerminalFormatter
        USE_PYGMENTS = True
    except ImportError:
        pass

def cheat_directories():
    "Assembles a list of directories containing cheatsheets."
    default_directories = [DEFAULT_CHEAT_DIR]
    try:
        import cheatsheets
        default_directories.append(cheatsheets.cheat_dir)
    except ImportError:
        pass

    default = [default_dir for default_dir in default_directories
               if os.path.isdir(default_dir)]

    if 'CHEATPATH' in os.environ and os.environ['CHEATPATH']:
        return [path for path in os.environ['CHEATPATH'].split(os.pathsep)
                if os.path.isdir(path)] + default
    else:
        return default


def cheat_files(cheat_directories):
    "Assembles a dictionary of cheatsheets found in the above directories."
    cheats = {}
    for cheat_dir in reversed(cheat_directories):
        cheats.update(dict([(cheat, cheat_dir)
                            for cheat in os.listdir(cheat_dir)
                            if not cheat.startswith('.')
                            and not cheat.startswith('__')]))
    return cheats


def main():
    # assemble a keyphrase out of all params passed to the script
    keyphrase  = ' '.join(sys.argv[1:])
    cheat_dirs = cheat_directories()

    # verify that we have at least one cheat directory
    if not cheat_dirs:
        error_msg = 'The {default} dir does not exist or the CHEATPATH var is not set.'
        print >> sys.stderr, error_msg.format(default=DEFAULT_CHEAT_DIR)
        exit()

    # list the files in the ~/.cheat directory
    cheatsheets = cheat_files(cheat_dirs)

    # print help if requested
    if keyphrase.lower() in ['', 'cheat', 'help', '-h', '-help', '--help']:
        print ("Usage: cheat [keyphrase]\n")
        print ("Available keyphrases:")
        max_command = max([len(x) for x in cheatsheets.keys()]) + 3
        print ('\n'.join(sorted(['%s [%s]' % (key.ljust(max_command), value)
                                for key, value in cheatsheets.items()])))
        exit()

    # print the cheatsheet if it exists
    if keyphrase in cheatsheets:
        filename = os.path.join(cheatsheets[keyphrase], keyphrase)
        if USE_PYGMENTS:
            pretty_print(filename)
        else:
            with open(filename) as istream:
                for l in istream:
                    sys.stdout.write(l)

    # if it does not, say so
    else:
        print ('No cheatsheet found for %s.' % keyphrase)


def pretty_print(filename):
    try:
        if os.path.splitext(filename)[1]:
            lexer = get_lexer_for_filename(filename)
        else:
            # shell is a sensible default when there is no extension
            lexer = get_lexer_for_filename(filename + '.sh')

    except ClassNotFound:
        lexer = TextLexer()

    with open(filename) as istream:
        code = istream.read()

    fmt = TerminalFormatter()
    highlight(code, lexer, fmt, sys.stdout)


if __name__ == '__main__':
    main()
